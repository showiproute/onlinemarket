# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-04-04 09:45
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import market.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=50, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='关于')),
                ('email', models.EmailField(max_length=20)),
                ('qq', models.CharField(max_length=20, verbose_name='qq')),
            ],
            options={
                'verbose_name': '关于',
                'verbose_name_plural': '关于',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='产品名称')),
                ('link', models.FileField(upload_to=market.models.get_brand_path, verbose_name='产品链接')),
                ('img', models.ImageField(upload_to=market.models.get_img_path, verbose_name='产品图片')),
                ('introduce', models.TextField(verbose_name='产品介绍')),
                ('price', models.IntegerField(verbose_name='产品价格')),
                ('connect', models.TextField(verbose_name='联系方式')),
                ('views', models.IntegerField(default=0, verbose_name='观看次数')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('create_date', models.DateField(auto_now_add=True, verbose_name='创建日期')),
                ('status', models.CharField(choices=[('上线', '上线'), ('下线', '下线')], default='上线', max_length=10, verbose_name='状态')),
            ],
            options={
                'verbose_name': '产品名称',
                'verbose_name_plural': '产品名称',
            },
        ),
        migrations.CreateModel(
            name='Brands_Cate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Brands_name', models.CharField(max_length=20, verbose_name='产品目录名称')),
            ],
            options={
                'verbose_name': '产品分类名称',
                'verbose_name_plural': '产品分类名称',
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_date', models.DateTimeField(auto_now_add=True, verbose_name='浏览时间')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Brand')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '浏览历史',
                'verbose_name_plural': '浏览历史',
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=10, verbose_name='标签名')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Brand', verbose_name='产品')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
            },
        ),
        migrations.CreateModel(
            name='Location_Cate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Location_name', models.CharField(max_length=20, verbose_name='地址目录名称')),
            ],
            options={
                'verbose_name': '地址分类名称',
                'verbose_name_plural': '地址分类名称',
            },
        ),
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='产品详细信息')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Brand', verbose_name='产品名称')),
            ],
            options={
                'verbose_name': '产品详细信息',
                'verbose_name_plural': '产品详细信息',
            },
        ),
        migrations.AddField(
            model_name='brand',
            name='brand_cate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Brands_Cate', verbose_name='产品目录分类'),
        ),
        migrations.AddField(
            model_name='brand',
            name='location_cate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Location_Cate', verbose_name='产品地址分类'),
        ),
    ]
